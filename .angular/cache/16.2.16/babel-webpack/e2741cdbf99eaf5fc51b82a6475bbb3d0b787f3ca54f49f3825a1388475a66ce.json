{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/event.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"user-message\": a0,\n    \"ai-message\": a1\n  };\n};\nfunction ChatComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10)(2, \"div\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c0, message_r2.isUser, !message_r2.isUser));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(message_r2.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(6, 3, message_r2.timestamp, \"shortTime\"), \" \");\n  }\n}\nfunction ChatComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14);\n    i0.ɵɵelement(2, \"span\")(3, \"span\")(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6, \"AI is thinking...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(eventService) {\n      this.eventService = eventService;\n      this.message = '';\n      this.messages = [];\n      this.loading = false;\n    }\n    ngOnInit() {\n      // Add welcome message\n      this.messages.push({\n        text: 'Hello! I\\'m your AI assistant. I can help you add events to your calendar. Try saying something like \"add a concert event\" or \"add a movie night\".',\n        isUser: false,\n        timestamp: new Date()\n      });\n    }\n    sendMessage() {\n      if (!this.message.trim() || this.loading) {\n        return;\n      }\n      const userMessage = this.message.trim();\n      this.messages.push({\n        text: userMessage,\n        isUser: true,\n        timestamp: new Date()\n      });\n      this.loading = true;\n      this.message = '';\n      // Send message to backend\n      this.eventService.sendChatMessage(userMessage).subscribe({\n        next: () => {\n          this.messages.push({\n            text: 'Great! I\\'ve processed your request. The events list should be updated now. You can refresh the page to see the new events.',\n            isUser: false,\n            timestamp: new Date()\n          });\n          this.loading = false;\n        },\n        error: error => {\n          this.messages.push({\n            text: 'Sorry, I encountered an error while processing your request. Please try again.',\n            isUser: false,\n            timestamp: new Date()\n          });\n          this.loading = false;\n          console.error('Chat error:', error);\n        }\n      });\n    }\n    onKeyPress(event) {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        this.sendMessage();\n      }\n    }\n    clearChat() {\n      this.messages = [{\n        text: 'Hello! I\\'m your AI assistant. I can help you add events to your calendar. Try saying something like \"add a concert event\" or \"add a movie night\".',\n        isUser: false,\n        timestamp: new Date()\n      }];\n    }\n    static {\n      this.ɵfac = function ChatComponent_Factory(t) {\n        return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.EventService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ChatComponent,\n        selectors: [[\"app-chat\"]],\n        decls: 13,\n        vars: 6,\n        consts: [[1, \"chat-container\"], [1, \"chat-header\"], [\"title\", \"Clear chat\", 1, \"clear-btn\", 3, \"click\"], [1, \"messages-container\"], [\"class\", \"message\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"loading-message\", 4, \"ngIf\"], [1, \"input-container\"], [\"placeholder\", \"Type your message here...\", \"rows\", \"2\", 1, \"message-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"keypress\"], [1, \"send-btn\", 3, \"disabled\", \"click\"], [1, \"message\", 3, \"ngClass\"], [1, \"message-content\"], [1, \"message-text\"], [1, \"message-time\"], [1, \"loading-message\"], [1, \"typing-indicator\"]],\n        template: function ChatComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n            i0.ɵɵtext(3, \"AI Assistant\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"button\", 2);\n            i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_4_listener() {\n              return ctx.clearChat();\n            });\n            i0.ɵɵtext(5, \" \\uD83D\\uDDD1\\uFE0F \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"div\", 3);\n            i0.ɵɵtemplate(7, ChatComponent_div_7_Template, 7, 9, \"div\", 4);\n            i0.ɵɵtemplate(8, ChatComponent_div_8_Template, 7, 0, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 6)(10, \"textarea\", 7);\n            i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_textarea_ngModelChange_10_listener($event) {\n              return ctx.message = $event;\n            })(\"keypress\", function ChatComponent_Template_textarea_keypress_10_listener($event) {\n              return ctx.onKeyPress($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"button\", 8);\n            i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_11_listener() {\n              return ctx.sendMessage();\n            });\n            i0.ɵɵtext(12);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngModel\", ctx.message)(\"disabled\", ctx.loading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"disabled\", !ctx.message.trim() || ctx.loading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Sending...\" : \"Send\", \" \");\n          }\n        },\n        dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.DatePipe],\n        styles: [\".chat-container[_ngcontent-%COMP%]{background:white;border-radius:.5rem;box-shadow:0 4px 6px #0000001a;display:flex;flex-direction:column;height:500px;max-width:400px}.chat-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;padding:1rem 1.5rem;border-bottom:1px solid #e2e8f0;background:#f7fafc;border-radius:.5rem .5rem 0 0}.chat-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;color:#2d3748;font-size:1.1rem;font-weight:600}.clear-btn[_ngcontent-%COMP%]{background:none;border:none;font-size:1.2rem;cursor:pointer;padding:.25rem;border-radius:.25rem;transition:background-color .2s}.clear-btn[_ngcontent-%COMP%]:hover{background:#e2e8f0}.messages-container[_ngcontent-%COMP%]{flex:1;overflow-y:auto;padding:1rem;display:flex;flex-direction:column;gap:1rem}.message[_ngcontent-%COMP%]{display:flex;margin-bottom:.5rem}.user-message[_ngcontent-%COMP%]{justify-content:flex-end}.ai-message[_ngcontent-%COMP%]{justify-content:flex-start}.message-content[_ngcontent-%COMP%]{max-width:80%;padding:.75rem 1rem;border-radius:1rem;position:relative}.user-message[_ngcontent-%COMP%]   .message-content[_ngcontent-%COMP%]{background:#4299e1;color:#fff;border-bottom-right-radius:.25rem}.ai-message[_ngcontent-%COMP%]   .message-content[_ngcontent-%COMP%]{background:#f1f5f9;color:#2d3748;border-bottom-left-radius:.25rem}.message-text[_ngcontent-%COMP%]{margin-bottom:.25rem;line-height:1.4}.message-time[_ngcontent-%COMP%]{font-size:.75rem;opacity:.7}.loading-message[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem;color:#718096;font-style:italic}.typing-indicator[_ngcontent-%COMP%]{display:flex;gap:.25rem}.typing-indicator[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{width:8px;height:8px;background:#a0aec0;border-radius:50%;animation:_ngcontent-%COMP%_typing 1.4s infinite ease-in-out}.typing-indicator[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(1){animation-delay:-.32s}.typing-indicator[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(2){animation-delay:-.16s}@keyframes _ngcontent-%COMP%_typing{0%,80%,to{transform:scale(.8);opacity:.5}40%{transform:scale(1);opacity:1}}.input-container[_ngcontent-%COMP%]{padding:1rem;border-top:1px solid #e2e8f0;display:flex;gap:.5rem;align-items:flex-end}.message-input[_ngcontent-%COMP%]{flex:1;border:1px solid #e2e8f0;border-radius:.375rem;padding:.75rem;font-family:inherit;font-size:.875rem;resize:none;outline:none;transition:border-color .2s}.message-input[_ngcontent-%COMP%]:focus{border-color:#4299e1}.message-input[_ngcontent-%COMP%]:disabled{background:#f7fafc;cursor:not-allowed}.send-btn[_ngcontent-%COMP%]{background:#4299e1;color:#fff;border:none;padding:.75rem 1.5rem;border-radius:.375rem;cursor:pointer;font-size:.875rem;font-weight:500;transition:background-color .2s;white-space:nowrap}.send-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:#3182ce}.send-btn[_ngcontent-%COMP%]:disabled{background:#a0aec0;cursor:not-allowed}\"]\n      });\n    }\n  }\n  return ChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}