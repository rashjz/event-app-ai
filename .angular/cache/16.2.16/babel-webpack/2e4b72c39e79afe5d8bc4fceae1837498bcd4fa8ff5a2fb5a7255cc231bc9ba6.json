{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/categories';\n  }\n  getAllCategories() {\n    return this.http.get(this.apiUrl);\n  }\n  getCategory(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  getCategoryByName(name) {\n    return this.http.get(`${this.apiUrl}/name/${name}`);\n  }\n  createCategory(category) {\n    return this.http.post(this.apiUrl, category);\n  }\n  updateCategory(id, category) {\n    return this.http.put(`${this.apiUrl}/${id}`, category);\n  }\n  deleteCategory(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function CategoryService_Factory(t) {\n      return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CategoryService,\n      factory: CategoryService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["CategoryService","constructor","http","apiUrl","getAllCategories","get","getCategory","id","getCategoryByName","name","createCategory","category","post","updateCategory","put","deleteCategory","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/Rashad_Javadov/events-backend/src/app/services/category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Category } from '../models/category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  private apiUrl = 'http://localhost:8080/api/categories';\n\n  constructor(private http: HttpClient) { }\n\n  getAllCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.apiUrl);\n  }\n\n  getCategory(id: number): Observable<Category> {\n    return this.http.get<Category>(`${this.apiUrl}/${id}`);\n  }\n\n  getCategoryByName(name: string): Observable<Category> {\n    return this.http.get<Category>(`${this.apiUrl}/name/${name}`);\n  }\n\n  createCategory(category: Category): Observable<Category> {\n    return this.http.post<Category>(this.apiUrl, category);\n  }\n\n  updateCategory(id: number, category: Category): Observable<Category> {\n    return this.http.put<Category>(`${this.apiUrl}/${id}`, category);\n  }\n\n  deleteCategory(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n} "],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,sCAAsC;EAEf;EAExCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,MAAM,CAAC;EAC/C;EAEAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACxD;EAEAC,iBAAiBA,CAACC,IAAY;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,SAASM,IAAI,EAAE,CAAC;EAC/D;EAEAC,cAAcA,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAW,IAAI,CAACT,MAAM,EAAEQ,QAAQ,CAAC;EACxD;EAEAE,cAAcA,CAACN,EAAU,EAAEI,QAAkB;IAC3C,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAW,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,EAAEI,QAAQ,CAAC;EAClE;EAEAI,cAAcA,CAACR,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACb,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uBA3BWP,eAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfpB,eAAe;MAAAqB,OAAA,EAAfrB,eAAe,CAAAsB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}