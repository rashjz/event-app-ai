{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/events';\n  }\n  getEvents() {\n    return this.http.get(this.apiUrl);\n  }\n  getEvent(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createEvent(event) {\n    return this.http.post(this.apiUrl, event);\n  }\n  updateEvent(id, event) {\n    return this.http.put(`${this.apiUrl}/${id}`, event);\n  }\n  deleteEvent(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  sendChatMessage(message) {\n    return this.http.post(`${this.apiUrl}/chat`, message);\n  }\n  static {\n    this.ɵfac = function EventService_Factory(t) {\n      return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EventService,\n      factory: EventService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["EventService","constructor","http","apiUrl","getEvents","get","getEvent","id","createEvent","event","post","updateEvent","put","deleteEvent","delete","sendChatMessage","message","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/Rashad_Javadov/events-backend/src/app/services/event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Event } from '../models/event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private apiUrl = 'http://localhost:8080/api/events';\n\n  constructor(private http: HttpClient) { }\n\n  getEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(this.apiUrl);\n  }\n\n  getEvent(id: number): Observable<Event> {\n    return this.http.get<Event>(`${this.apiUrl}/${id}`);\n  }\n\n  createEvent(event: Event): Observable<Event> {\n    return this.http.post<Event>(this.apiUrl, event);\n  }\n\n  updateEvent(id: number, event: Event): Observable<Event> {\n    return this.http.put<Event>(`${this.apiUrl}/${id}`, event);\n  }\n\n  deleteEvent(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  sendChatMessage(message: string): Observable<void> {\n    return this.http.post<void>(`${this.apiUrl}/chat`, message);\n  }\n} "],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kCAAkC;EAEX;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,MAAM,CAAC;EAC5C;EAEAG,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACrD;EAEAC,WAAWA,CAACC,KAAY;IACtB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAQ,IAAI,CAACP,MAAM,EAAEM,KAAK,CAAC;EAClD;EAEAE,WAAWA,CAACJ,EAAU,EAAEE,KAAY;IAClC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAQ,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,KAAK,CAAC;EAC5D;EAEAI,WAAWA,CAACN,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAQ,eAAeA,CAACC,OAAe;IAC7B,OAAO,IAAI,CAACd,IAAI,CAACQ,IAAI,CAAO,GAAG,IAAI,CAACP,MAAM,OAAO,EAAEa,OAAO,CAAC;EAC7D;;;uBA3BWhB,YAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZpB,YAAY;MAAAqB,OAAA,EAAZrB,YAAY,CAAAsB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}